Integration Case
================

Description of the Problem
--------------------------

The project has two layers contained here: Service and Backend.

The API, or presentation layer is skipped for brevity.

This is a rather typical integration scenario. Items are sent
externally by a third party to our integration service. Our
service is called by item content only, which we assign internal,
incremental identifiers, and return these (in text form here)
to the third party.

The rule is that, any item content should be saved once only
and should not occur twice in our systems. As per the agreement,
the third party should wait for the result of their call, which
can take a while (here simulated as two seconds, in reality
more like forty seconds). However, in reality the third party
calls the service multiple times without waiting for a response.

There is protection already in place to check for duplicate 
items. However, it turns out if called fast enough in parallel
(which the main Program demonstrates) multiple entries with
the same content are recorded on our end.

Required Solution
-----------------

(1) Assuming that there is a single server at work, and all
calls come through the same method, modify things only under
the Service layer (folder) change the code so that:

- Under no circumstances the same content is saved twice.

- Items coming with different content should be properly
processed in parallel, and not wait for each other.

(a) Describe your solution in a text file similar to this one.

(b) Implement your solution.

(c) Add code to Program.cs to demonstrate that your code
allows parallel storage of items with different content.

(2) In case this is a distributed system, and multiple
servers containing ItemIntegrationService exist, how
would you solve this problem?

(a) Write another text file to describe your solution.

(b) Make sure to include any weakness your solution might have.

